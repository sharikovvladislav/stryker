[{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":1,"column":42},"end":{"line":3,"column":1}},"range":[42,69],"testsRan":["Add should be able to add two numbers"],"originalLines":"module.exports.add = function(num1, num2) {\r\n  return num1 + num2;\r\n};","mutatedLines":"module.exports.add = function(num1, num2) {\n};"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BinaryOperator","status":1,"replacement":"num1 - num2","location":{"start":{"line":2,"column":9},"end":{"line":2,"column":20}},"range":[54,65],"testsRan":["Add should be able to add two numbers"],"originalLines":"  return num1 + num2;","mutatedLines":"  return num1 - num2;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"UpdateOperator","status":1,"replacement":"number--","location":{"start":{"line":6,"column":2},"end":{"line":6,"column":10}},"range":[120,128],"testsRan":["Add should be able 1 to a number"],"originalLines":"  number++;","mutatedLines":"  number--;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":5,"column":41},"end":{"line":8,"column":1}},"range":[115,150],"testsRan":["Add should be able to add two numbers","Add should be able 1 to a number"],"originalLines":"module.exports.addOne = function(number) {\r\n  number++;\r\n  return number;\r\n};","mutatedLines":"module.exports.addOne = function(number) {\n};"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":10,"column":41},"end":{"line":12,"column":1}},"range":[196,219],"testsRan":["Add should be able to add two numbers","Add should be able 1 to a number","Add should be able negate a number"],"originalLines":"module.exports.negate = function(number) {\r\n  return -number;\r\n};","mutatedLines":"module.exports.negate = function(number) {\n};"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"UnaryOperator","status":1,"replacement":"+number","location":{"start":{"line":11,"column":9},"end":{"line":11,"column":16}},"range":[208,215],"testsRan":["Add should be able negate a number"],"originalLines":"  return -number;","mutatedLines":"  return +number;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BinaryOperator","status":0,"replacement":"number >= 10","location":{"start":{"line":15,"column":9},"end":{"line":15,"column":20}},"range":[281,292],"testsRan":[],"originalLines":"  return number > 10;","mutatedLines":"  return number >= 10;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BinaryOperator","status":0,"replacement":"number <= 10","location":{"start":{"line":15,"column":9},"end":{"line":15,"column":20}},"range":[281,292],"testsRan":[],"originalLines":"  return number > 10;","mutatedLines":"  return number <= 10;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":18,"column":51},"end":{"line":24,"column":1}},"range":[352,453],"testsRan":["Add should be able to add two numbers","Add should be able 1 to a number","Add should be able negate a number","Add should be able to recognize a negative number"],"originalLines":"module.exports.isNegativeNumber = function(number) {\r\n  var isNegative = false;\r\n  if(number < 0){\r\n    isNegative = true;\r\n  }\r\n  return isNegative;\r\n};","mutatedLines":"module.exports.isNegativeNumber = function(number) {\n};"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BlockStatement","status":2,"replacement":"{\n}","location":{"start":{"line":14,"column":45},"end":{"line":16,"column":1}},"range":[269,296],"testsRan":["Add should be able to add two numbers","Add should be able 1 to a number","Add should be able negate a number","Add should be able to recognize a negative number","Add should be able to recognize that 0 is not a negative number","Circle should have a circumference of 2PI when the radius is 1"],"originalLines":"module.exports.notCovered = function(number) {\r\n  return number > 10;\r\n};","mutatedLines":"module.exports.notCovered = function(number) {\n};"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"RemoveConditionals","status":1,"replacement":"false","location":{"start":{"line":20,"column":5},"end":{"line":20,"column":15}},"range":[387,397],"testsRan":["Add should be able to recognize a negative number"],"originalLines":"  if(number < 0){","mutatedLines":"  if(false){"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BooleanSubstitution","status":1,"replacement":"true","location":{"start":{"line":19,"column":19},"end":{"line":19,"column":24}},"range":[374,379],"testsRan":["Add should be able to recognize a negative number","Add should be able to recognize that 0 is not a negative number"],"originalLines":"  var isNegative = false;","mutatedLines":"  var isNegative = true;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"RemoveConditionals","status":1,"replacement":"true","location":{"start":{"line":20,"column":5},"end":{"line":20,"column":15}},"range":[387,397],"testsRan":["Add should be able to recognize a negative number","Add should be able to recognize that 0 is not a negative number"],"originalLines":"  if(number < 0){","mutatedLines":"  if(true){"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BinaryOperator","status":1,"replacement":"number <= 0","location":{"start":{"line":20,"column":5},"end":{"line":20,"column":15}},"range":[387,397],"testsRan":["Add should be able to recognize a negative number","Add should be able to recognize that 0 is not a negative number"],"originalLines":"  if(number < 0){","mutatedLines":"  if(number <= 0){"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BinaryOperator","status":1,"replacement":"number >= 0","location":{"start":{"line":20,"column":5},"end":{"line":20,"column":15}},"range":[387,397],"testsRan":["Add should be able to recognize a negative number"],"originalLines":"  if(number < 0){","mutatedLines":"  if(number >= 0){"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":20,"column":16},"end":{"line":22,"column":3}},"range":[398,428],"testsRan":["Add should be able to recognize a negative number"],"originalLines":"  if(number < 0){\r\n    isNegative = true;\r\n  }","mutatedLines":"  if(number < 0){\n}"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Add.js","mutatorName":"BooleanSubstitution","status":1,"replacement":"false","location":{"start":{"line":21,"column":17},"end":{"line":21,"column":21}},"range":[418,422],"testsRan":["Add should be able to recognize a negative number"],"originalLines":"    isNegative = true;","mutatedLines":"    isNegative = false;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Circle.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":1,"column":51},"end":{"line":4,"column":1}},"range":[51,155],"testsRan":["Add should be able to add two numbers","Add should be able 1 to a number","Add should be able negate a number","Add should be able to recognize a negative number","Add should be able to recognize that 0 is not a negative number","Circle should have a circumference of 2PI when the radius is 1"],"originalLines":"module.exports.getCircumference = function(radius) {\r\n  //Function to test multiple math mutations in a single function.\r\n  return 2 * Math.PI * radius;\r\n};","mutatedLines":"module.exports.getCircumference = function(radius) {\n};"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Circle.js","mutatorName":"BinaryOperator","status":2,"replacement":"2 * Math.PI / radius","location":{"start":{"line":3,"column":9},"end":{"line":3,"column":29}},"range":[131,151],"testsRan":["Circle should have a circumference of 2PI when the radius is 1"],"originalLines":"  return 2 * Math.PI * radius;","mutatedLines":"  return 2 * Math.PI / radius;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Circle.js","mutatorName":"BinaryOperator","status":1,"replacement":"2 / Math.PI","location":{"start":{"line":3,"column":9},"end":{"line":3,"column":20}},"range":[131,142],"testsRan":["Circle should have a circumference of 2PI when the radius is 1"],"originalLines":"  return 2 * Math.PI * radius;","mutatedLines":"  return 2 / Math.PI * radius;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Circle.js","mutatorName":"BinaryOperator","status":0,"replacement":"5 / 2 / 3","location":{"start":{"line":7,"column":10},"end":{"line":7,"column":19}},"range":[218,227],"testsRan":[],"originalLines":"  var i = 5 / 2 * 3;","mutatedLines":"  var i = 5 / 2 / 3;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Circle.js","mutatorName":"BinaryOperator","status":0,"replacement":"5 * 2","location":{"start":{"line":7,"column":10},"end":{"line":7,"column":15}},"range":[218,223],"testsRan":[],"originalLines":"  var i = 5 / 2 * 3;","mutatedLines":"  var i = 5 * 2 * 3;"},{"sourceFilePath":"C:\\z\\github\\stryker-mutator\\stryker\\integrationTest\\test\\mocha-mocha\\src\\Circle.js","mutatorName":"BlockStatement","status":2,"replacement":"{\n}","location":{"start":{"line":6,"column":45},"end":{"line":8,"column":1}},"range":[205,231],"testsRan":["Add should be able to add two numbers","Add should be able 1 to a number","Add should be able negate a number","Add should be able to recognize a negative number","Add should be able to recognize that 0 is not a negative number","Circle should have a circumference of 2PI when the radius is 1"],"originalLines":"module.exports.untestedFunction = function() {\r\n  var i = 5 / 2 * 3;\r\n};","mutatedLines":"module.exports.untestedFunction = function() {\n};"}]